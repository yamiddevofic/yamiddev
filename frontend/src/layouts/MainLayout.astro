---
import { Astro } from "astro";
import Navbar from "../components/organisms/Navbar";
import Footer from "../components/organisms/Footer.astro";

// Props esperadas para SEO dinámico
export interface Props {
  title?: string;
  description?: string;
  image?: string;
  icon?: string;
  canonical?: string;
  noindex?: boolean;
  lang?: string;
  isMain?: boolean;
  header?: boolean;
  pageType?: 'website' | 'article' | 'course' | 'person'; // Define el tipo de contenido principal
  keywords?: string[];
  // Props específicas para un curso
  courseDetails?: {
    name: string;
    description: string;
    provider: {
      name: string;
      url: string;
    };
  };
  // Props específicas para un artículo (opcional, para futura expansión)
  articleDetails?: {
    author: string;
    publishDate: string; // Formato ISO: "2025-08-12T19:20:30+01:00"
  };
}

const {
  title,
  description,
  image,
  icon = '/dev.jpg',
  canonical,
  noindex = false,
  lang = 'es',
  isMain = false,
  header = true,
  pageType = 'website', // Por defecto, es un sitio web general
  keywords = [],
  courseDetails,
  articleDetails,
} = Astro.props as Props;

// --- Configuración Base del Sitio ---
const siteName = 'Yamid Dev';
const origin = Astro.site ? String(Astro.site) : Astro.url.origin;
const defaultTitle = 'Yamid Dev | Desarrollador Web Full Stack';
const defaultDescription = 'Desarrollador Web Full Stack especializado en JavaScript, React, Python y más. Creando soluciones web innovadoras y eficientes.';
const defaultKeywords = ['yamiddev', 'yamiddevofic', 'desarrollador web', 'full stack', 'javascript', 'react', 'python', 'astro', 'tailwind', 'programador', 'yamid dev', 'yamid rodriguez'];

// --- Lógica de Contenido ---
const pageTitle = title ? `${title} | ${siteName}` : defaultTitle;
const pageDescription = description ?? defaultDescription;
const canonicalUrl = canonical || Astro.url.href;

// Normalización de URLs de imágenes para que sean absolutas
const fallbackImage = '/dev.jpg';
const imagePath = image || fallbackImage;
const imageUrl = new URL(imagePath, origin).toString();
const iconUrl = new URL(icon, origin).toString();

// Combina keywords personalizadas con las por defecto
const finalKeywords = [...new Set([...defaultKeywords, ...keywords])].join(', ');

// --- Generación de Schema.org (JSON-LD) Dinámico ---
let schema: any = [
  {
    '@context': 'https://schema.org',
    '@type': 'WebSite',
    name: siteName,
    url: origin,
    inLanguage: lang,
    potentialAction: {
      '@type': 'SearchAction',
      target: `${origin}/buscar?q={search_term_string}`,
      'query-input': 'required name=search_term_string'
    }
  },
  {
    "@context": "https://schema.org",
    "@type": "Person",
    "name": "Yamid Horacio Rodríguez",
    "alternateName": ["yamiddev", "yamiddevofic"],
    "url": origin,
    "image": imageUrl,
    "sameAs": [
      "https://github.com/yamiddevofic",
      "https://twitter.com/yamiddevofic",
      "https://linkedin.com/in/yamiddevofic"
    ],
    "jobTitle": "Desarrollador Web Full Stack",
    "description": defaultDescription,
  }
];

// Añade schema específico según el tipo de página
if (pageType === 'course' && courseDetails) {
  schema.push({
    '@context': 'https://schema.org',
    '@type': 'Course',
    name: courseDetails.name,
    description: courseDetails.description,
    provider: {
      '@type': 'Organization',
      name: courseDetails.provider.name,
      sameAs: courseDetails.provider.url
    }
  });
}

if (pageType === 'article' && articleDetails) {
  schema.push({
      '@context': 'https://schema.org',
      '@type': 'Article',
      headline: title,
      image: imageUrl,
      author: {
        '@type': 'Person',
        name: articleDetails.author,
        url: origin,
      },
      publisher: {
        '@type': 'Organization',
        name: siteName,
        logo: {
          '@type': 'ImageObject',
          url: new URL('/dev.jpg', origin).toString(),
        },
      },
      datePublished: articleDetails.publishDate,
      description: pageDescription,
      mainEntityOfPage: {
        '@type': 'WebPage',
        '@id': canonicalUrl,
      },
  });
}
---

<!doctype html>
<html lang={lang} class="dark">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />
    <link rel="canonical" href={canonicalUrl} />
    <meta name="robots" content={noindex ? 'noindex, nofollow' : 'index, follow'} />

    <!-- Favicons -->
    <link rel="icon" type="image/jpeg" href={iconUrl} sizes="any" />
    <link rel="icon" type="image/jpeg" href={iconUrl} sizes="32x32" />
    <link rel="apple-touch-icon" href={iconUrl} />
    <meta name="msapplication-TileImage" content={iconUrl} />

    <!-- Fuentes -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap" rel="stylesheet">

    <!-- Open Graph -->
    <meta property="og:type" content={pageType === 'article' ? 'article' : 'website'} />
    <meta property="og:site_name" content={siteName} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:url" content={canonicalUrl} />
    <meta property="og:image" content={imageUrl} />
    <meta property="og:locale" content={lang === 'es' ? 'es_ES' : lang} />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={pageDescription} />
    <meta name="twitter:image" content={imageUrl} />
    <meta name="twitter:site" content="@yamiddevofic" />
    <meta name="twitter:creator" content="@yamiddevofic" />

    <!-- SEO Adicional -->
    <meta name="author" content="Yamid Horacio Rodríguez" />
    <meta name="keywords" content={finalKeywords} />
    <meta name="theme-color" content="#1a202c" />

    <!-- Schema.org JSON-LD -->
    <script type="application/ld+json" set:html={JSON.stringify(schema)} />
</head>
<body
    class="bg-white dark:bg-gray-800 text-gray-800 dark:text-white transition-colors duration-300 flex flex-col  min-h-[100vh]"
>
    {header && <Navbar client:load isMain={isMain}/>}
    <main class="w-full h-auto flex items-center justify-center flex-grow flex-col overflow-x-hidden">
        <slot />
    </main>
    <Footer />
    <!-- Si tienes scripts globales, considera cargarlos aquí -->
</body>
</html>